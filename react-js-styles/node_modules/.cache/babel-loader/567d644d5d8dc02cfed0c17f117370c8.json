{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\TE\\\\js yt\\\\react-complete-guide-code\\\\react-start\\\\react-js-styles\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport NewTask from \"./comps/NewTask\";\nimport ShowTask from \"./comps/ShowTask\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"./firebase\";\nimport { uid } from \"uid\";\nimport { onValue, ref, remove, set, update } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const testData = [];\n  const [tasks, setTasks] = useState(testData); ////////////////\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchTasks = taskText => {\n    setIsLoading(true);\n    onValue(ref(db), snapshot => {\n      const data = snapshot.val(); // console.log(data);\n\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        // console.log(taskKey);\n        loadedTasks.push({\n          id: data[taskKey].uuid,\n          text: data[taskKey].text,\n          done: data[taskKey].taskStatus\n        });\n      } // console.log(loadedTasks);\n\n\n      setTasks(loadedTasks);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const saveTextFunc = TextData => {\n    console.log(TextData.text);\n    set(ref(db, `/${TextData.uuid}`), { ...TextData\n    });\n  }; ///Delelte\n\n\n  const deleteTextFunc = taskText => {\n    remove(ref(db, `/${taskText.id}`)); // db().ref(`/${taskText.id}`).remove();\n    // fetchTasks();\n\n    console.log(taskText);\n  }; ///update\n  // const updateFunc = (taskData) => {\n  //   console.log(taskData.id);\n  //   // update(ref(db, `/${taskData.id}`),\n  //   // {\n  //   //   taskStatus: true,\n  //   //   // todo: 'Hello WOrld'\n  //   //   // uuid: taskData.id\n  //   // })\n  //   console.log(taskData);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onSaveText: saveTextFunc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowTask, {\n      items: tasks,\n      isLoadingProp: isLoading,\n      onDeleteText: deleteTextFunc // onDone={updateFunc}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"OoSVvETOptzIolLGuvJrhFiayMU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/victo/Desktop/TE/js yt/react-complete-guide-code/react-start/react-js-styles/src/App.js"],"names":["NewTask","ShowTask","useState","useEffect","db","uid","onValue","ref","remove","set","update","App","testData","tasks","setTasks","isLoading","setIsLoading","fetchTasks","taskText","snapshot","data","val","loadedTasks","taskKey","push","id","uuid","text","done","taskStatus","saveTextFunc","TextData","console","log","deleteTextFunc"],"mappings":";;;AAAA,OAAO,sDAAP;AACA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,MAAvB,EAA+BC,GAA/B,EAAoCC,MAApC,QAAkD,mBAAlD;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAG,EAAjB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACU,QAAD,CAAlC,CAHa,CAKb;;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMe,UAAU,GAAIC,QAAD,IAAc;AAC/BF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAV,IAAAA,OAAO,CAACC,GAAG,CAACH,EAAD,CAAJ,EAAWe,QAAD,IAAc;AAC7B,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb,CAD6B,CAE7B;;AAEA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;AAC1B;AAEAE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEL,IAAI,CAACG,OAAD,CAAJ,CAAcG,IADH;AAEfC,UAAAA,IAAI,EAAEP,IAAI,CAACG,OAAD,CAAJ,CAAcI,IAFL;AAGfC,UAAAA,IAAI,EAAER,IAAI,CAACG,OAAD,CAAJ,CAAcM;AAHL,SAAjB;AAKD,OAb4B,CAc7B;;;AACAf,MAAAA,QAAQ,CAACQ,WAAD,CAAR;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAjBM,CAAP;AAkBD,GArBD;;AAuBAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMa,YAAY,GAAIC,QAAD,IAAc;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACJ,IAArB;AAEAlB,IAAAA,GAAG,CAACF,GAAG,CAACH,EAAD,EAAM,IAAG2B,QAAQ,CAACL,IAAK,EAAvB,CAAJ,EAA+B,EAChC,GAAGK;AAD6B,KAA/B,CAAH;AAGD,GAND,CApCa,CA4Cb;;;AACA,QAAMG,cAAc,GAAIhB,QAAD,IAAc;AACnCV,IAAAA,MAAM,CAACD,GAAG,CAACH,EAAD,EAAM,IAAGc,QAAQ,CAACO,EAAG,EAArB,CAAJ,CAAN,CADmC,CAEnC;AACA;;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AAED,GAND,CA7Ca,CAqDb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEY;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEjB,KADT;AAEE,MAAA,aAAa,EAAEE,SAFjB;AAGE,MAAA,YAAY,EAAEmB,cAHhB,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAYD;;GA7EQvB,G;;KAAAA,G;AA+ET,eAAeA,GAAf","sourcesContent":["import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport NewTask from \"./comps/NewTask\";\nimport ShowTask from \"./comps/ShowTask\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"./firebase\";\nimport { uid } from \"uid\";\nimport { onValue, ref, remove, set, update } from \"firebase/database\";\n\nfunction App() {\n  const testData = [];\n\n  const [tasks, setTasks] = useState(testData);\n\n  ////////////////\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchTasks = (taskText) => {\n    setIsLoading(true);\n\n    onValue(ref(db), (snapshot) => {\n      const data = snapshot.val();\n      // console.log(data);\n\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        // console.log(taskKey);\n\n        loadedTasks.push({\n          id: data[taskKey].uuid,\n          text: data[taskKey].text,\n          done: data[taskKey].taskStatus,\n        });\n      }\n      // console.log(loadedTasks);\n      setTasks(loadedTasks);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n\n  const saveTextFunc = (TextData) => {\n    console.log(TextData.text);\n    \n    set(ref(db, `/${TextData.uuid}`), {\n      ...TextData\n    });\n  };\n\n  ///Delelte\n  const deleteTextFunc = (taskText) => {\n    remove(ref(db, `/${taskText.id}`));\n    // db().ref(`/${taskText.id}`).remove();\n    // fetchTasks();\n    console.log(taskText);\n\n  };\n\n  ///update\n  // const updateFunc = (taskData) => {\n  //   console.log(taskData.id);\n  //   // update(ref(db, `/${taskData.id}`),\n  //   // {\n  //   //   taskStatus: true,\n  //   //   // todo: 'Hello WOrld'\n  //   //   // uuid: taskData.id\n  //   // })\n  //   console.log(taskData);\n  // };\n\n  return (\n    <>\n      <NewTask onSaveText={saveTextFunc}></NewTask>\n\n      <ShowTask\n        items={tasks}\n        isLoadingProp={isLoading}\n        onDeleteText={deleteTextFunc}\n        // onDone={updateFunc}\n      ></ShowTask>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}